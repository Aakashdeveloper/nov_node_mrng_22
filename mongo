////How to setup mongodb

* Create folder by the name of data
C:/program Files/data


* Create folder by the name of db inside data
C:/program Files/data/db

////////////////////////////////////////
No Sql and can save unstructred data

RollNo | Hindi  | English | Computer
   1   |  85    |         |
   2   |        |  78     |
   3   |  79    |         |
   4   |  86    |         |    79


[
    {
        rollNo:1,
        hindi:85
    },
    {
        rollNo:2,
        English:78
    },
    {
        rollNo:3,
        hindi:79
    } ,
    {
        rollNo:4,
        hindi:86,
        computer:79
    }
]

////////////////////////////////////////////////////////////////
Sql         NoSql
Database    Database
Table       Collection
Row         Document
Select      find
Insert      Insert
Update      Update
Delete      Remove

------------------------------------------------
Default Port> 27017


//////Step to start mongodb/////
> open cmd and go inside the folder
> c:/programm file/mongodb/server/5.3/bin
> mongod
* do not close cmd

> open new cmd and go inside the folder
> c:/programm file/mongodb/server/5.3/bin
> mongo


////////////
* To See All databases
> Show dbs

* To go inside databases
> use dbname

* To see collections
> show collections

* To create new databases
> use dbname


* To see data inside collections (find query)
> db.collectionsName.find()

> db.collectionsName.find().pretty()

_id > primary key (always unique)
12byte
timestamp
series
random number

////insert data

db.users.insert({name:'Nikita'})

db.users.insert({_id:1,name:'Arun'})
db.users.insert({_id:2,name:'karan'})


db.users.insert([
    {_id:1,name:'Arun'},
    {_id:2,name:'karan'},
    {_id:2,name:'karan'}
])


* To find data on basis of condition
db.products.find({category_id:2})


db.products.find({product_name:"Washing Machine",Color:"White"})

//////
Create clutser
create database
Add network Access
Add Database Access


mongodb+srv://<username>:<password>@cluster0.f8vmc.mongodb.net/?retryWrites=true&w=majority
mongodb+srv://test:test123@cluster0.f8vmc.mongodb.net/?retryWrites=true&w=majority


// Schema design
> Location
> Restaurants
> MealType
> MenuData
> Orders


db.restaurants.find({state_id:1}).pretty()

db.restaurants.find({condition},{projection}).pretty()

db.restaurants.find({},{restaurant_name:1,_id:0}).pretty()

db.restaurants.find({state_id:1},{restaurant_name:1,cost:1,_id:0}).pretty()

db.restaurants.find({state_id:1},{image_gallery:0,mealTypes:0,cuisines:0,_id:0}).pretty()

db.restaurants.find({"rating_text" : "Very Good"},{restaurant_name:1,rating_text:1,_id:0}).pretty()


db.restaurants.find({"mealTypes.mealtype_id" :1},{restaurant_name:1,mealTypes:1,_id:0}).pretty()

db.restaurants.find({cost:{$lt:500}},{restaurant_name:1,cost:1,_id:0}).pretty()


db.restaurants.find({cost:{$gt:500}},{restaurant_name:1,cost:1,_id:0}).pretty()


db.restaurants.find({cost:{$gt:500,$lt:900}},{restaurant_name:1,cost:1,_id:0}).pretty()


db.restaurants.find({"mealTypes.mealtype_id":{$in:[1,4,6]}},{restaurant_name:1,mealTypes:1,_id:0}).pretty()


///update
db.collectionsName.update({condition},{update query})

db.users.update(
    {
        _id:4
    },
    {
        $set:{
            "name":"Amit",
            "age":27,
            "job":"Pilot",
            "city":"Helsinki"
        }
    },
    {
        upsert:true
    }
)


db.users.update(
    {
        _id:1
    },
    {
        $unset:{
            "city":1
        }
    }
)


////////////////////////////////////////
db.collection.remove({}) // delete all records
db.users.remove({_id:4}) // delete particular record

db.users.deleteOne({_id:4})